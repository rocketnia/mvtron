// build.gradle
//
// Copyright 2010 Ross Angle


// Create everyday tasks. The MVTron project layout is arranged
// according to the default Gradle conventions just so that we don't
// need much more configuration than this. Some of the most useful
// tasks defined this way are "build", "clean", "eclipse", and
// "eclipseClean".
apply plugin: 'eclipse'
apply plugin: 'groovy'

// A couple of our dependencies will be resolved (and downloaded, if
// necessary) from the central Maven repository.
repositories { mavenCentral() }

dependencies {
	
	// Gradle's Groovy plugin doesn't specify the Groovy
	// implementation for us, so we specify it ourselves. Right now
	// we're using Groovy 1.7.0 rather than 1.7.2 in order to match up
	// with the version Eclipse's Groovy plugin uses.
	groovy 'org.codehaus.groovy:groovy:1.7.0'
	
	// Gradle's unit test support requires us to specify a tool for
	// that as well. We'd use JUnit 4.8.2, but only 4.8.1 is in the
	// Maven repository for the time being.
	//
	// However, right now we don't have any tests, so we'll leave this
	// out!
	//
//	testCompile 'junit:junit:4.8.1'
}


// We also have a compile-time dependency on the .jar files in the
// lib directory, which is Git-ignored. Particularly, that directory
// should include Xuggler 3.3.940 (and its dependencies) and
// and JTransforms 2.3.

// Gradle puts Commons CLI at the end of the classpath by default, and
// the version of Xuggler we're using depends on a different,
// incompatible version of Commons CLI. This breaks
// org.codehaus.groovy.tools.FileSystemCompiler's argument parsing,
// causing it to think "-Jtarget=1.5" refers to some file called
// "target=1.5". In order to fix this, we're doing some surgery to get
// the path(s) to the version of Commons CLI that works, and we're
// putting that result before our own paths.

def registeredCommonsCli = compileGroovy.getServices().get(
	org.gradle.api.internal.ClassPathRegistry.class ).
	getClassPathFiles( "COMMONS_CLI" )

dependencies {
	
	compile files(
		registeredCommonsCli,
		'lib/jtransforms-2.3.jar',
		'lib/xuggle-xuggler.jar'
	)
	
	// Thanks to a Class-Path manifest attribute in the the
	// Xuggler jar, these are used whether or not we specify them.
	// That just makes the Commons CLI conflict worse.
//		'lib/commons-cli.jar',
//		'lib/logback-classic.jar',
//		'lib/logback-core.jar',
//		'lib/slf4j-api.jar',
//		'lib/xuggle-xuggler-test.jar',
}


// Make sure the jar is named mvtron.jar rather than anything else.
archivesBaseName = 'mvtron'
